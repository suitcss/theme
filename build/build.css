/**
 * Base
 */

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  line-height: 1.15; /* 2 */
  -ms-text-size-adjust: 100%; /* 3 */
  -webkit-text-size-adjust: 100%; /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0;
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

iframe {
  border: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}

a {
  color: #4b8400;
  text-decoration: none;
}

a:hover,
a:focus {
  text-decoration: underline;
}

body {
  color: #2d660a;
  font-family: "Helvetica Neue for IBM", "Helvetica Neue", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", sans-serif;
  font-size: 16px;
  font-weight: 300;
  letter-spacing: 0.02em;
  line-height: 1.25;
}

/**
 * Utilities
 */

/**
 * @define utilities
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

.u-after1of12 {
  margin-right: 8.33333% !important;
}

.u-after1of10 {
  margin-right: 10% !important;
}

.u-after1of8 {
  margin-right: 12.5% !important;
}

.u-after1of6,
.u-after2of12 {
  margin-right: 16.66667% !important;
}

.u-after1of5,
.u-after2of10 {
  margin-right: 20% !important;
}

.u-after1of4,
.u-after2of8,
.u-after3of12 {
  margin-right: 25% !important;
}

.u-after3of10 {
  margin-right: 30% !important;
}

.u-after1of3,
.u-after2of6,
.u-after4of12 {
  margin-right: 33.33333% !important;
}

.u-after3of8 {
  margin-right: 37.5% !important;
}

.u-after2of5,
.u-after4of10 {
  margin-right: 40% !important;
}

.u-after5of12 {
  margin-right: 41.66667% !important;
}

.u-after1of2,
.u-after2of4,
.u-after3of6,
.u-after4of8,
.u-after5of10,
.u-after6of12 {
  margin-right: 50% !important;
}

.u-after7of12 {
  margin-right: 58.33333% !important;
}

.u-after3of5,
.u-after6of10 {
  margin-right: 60% !important;
}

.u-after5of8 {
  margin-right: 62.5% !important;
}

.u-after2of3,
.u-after4of6,
.u-after8of12 {
  margin-right: 66.66667% !important;
}

.u-after7of10 {
  margin-right: 70% !important;
}

.u-after3of4,
.u-after6of8,
.u-after9of12 {
  margin-right: 75% !important;
}

.u-after4of5,
.u-after8of10 {
  margin-right: 80% !important;
}

.u-after5of6,
.u-after10of12 {
  margin-right: 83.33333% !important;
}

.u-after7of8 {
  margin-right: 87.5% !important;
}

.u-after9of10 {
  margin-right: 90% !important;
}

.u-after11of12 {
  margin-right: 91.66667% !important;
}

/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:320px) and (max-width:640px) {

  .u-sm-afterNone {
    margin-right: 0 !important;
  }

  .u-sm-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-sm-after1of10 {
    margin-right: 10% !important;
  }

  .u-sm-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-sm-after1of6,
  .u-sm-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-sm-after1of5,
  .u-sm-after2of10 {
    margin-right: 20% !important;
  }

  .u-sm-after1of4,
  .u-sm-after2of8,
  .u-sm-after3of12 {
    margin-right: 25% !important;
  }

  .u-sm-after3of10 {
    margin-right: 30% !important;
  }

  .u-sm-after1of3,
  .u-sm-after2of6,
  .u-sm-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-sm-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-sm-after2of5,
  .u-sm-after4of10 {
    margin-right: 40% !important;
  }

  .u-sm-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-sm-after1of2,
  .u-sm-after2of4,
  .u-sm-after3of6,
  .u-sm-after4of8,
  .u-sm-after5of10,
  .u-sm-after6of12 {
    margin-right: 50% !important;
  }

  .u-sm-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-sm-after3of5,
  .u-sm-after6of10 {
    margin-right: 60% !important;
  }

  .u-sm-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-sm-after2of3,
  .u-sm-after4of6,
  .u-sm-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-sm-after7of10 {
    margin-right: 70% !important;
  }

  .u-sm-after3of4,
  .u-sm-after6of8,
  .u-sm-after9of12 {
    margin-right: 75% !important;
  }

  .u-sm-after4of5,
  .u-sm-after8of10 {
    margin-right: 80% !important;
  }

  .u-sm-after5of6,
  .u-sm-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-sm-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-sm-after9of10 {
    margin-right: 90% !important;
  }

  .u-sm-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:640px) and (max-width:960px) {

  .u-md-afterNone {
    margin-right: 0 !important;
  }

  .u-md-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-md-after1of10 {
    margin-right: 10% !important;
  }

  .u-md-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-md-after1of6,
  .u-md-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-md-after1of5,
  .u-md-after2of10 {
    margin-right: 20% !important;
  }

  .u-md-after1of4,
  .u-md-after2of8,
  .u-md-after3of12 {
    margin-right: 25% !important;
  }

  .u-md-after3of10 {
    margin-right: 30% !important;
  }

  .u-md-after1of3,
  .u-md-after2of6,
  .u-md-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-md-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-md-after2of5,
  .u-md-after4of10 {
    margin-right: 40% !important;
  }

  .u-md-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-md-after1of2,
  .u-md-after2of4,
  .u-md-after3of6,
  .u-md-after4of8,
  .u-md-after5of10,
  .u-md-after6of12 {
    margin-right: 50% !important;
  }

  .u-md-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-md-after3of5,
  .u-md-after6of10 {
    margin-right: 60% !important;
  }

  .u-md-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-md-after2of3,
  .u-md-after4of6,
  .u-md-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-md-after7of10 {
    margin-right: 70% !important;
  }

  .u-md-after3of4,
  .u-md-after6of8,
  .u-md-after9of12 {
    margin-right: 75% !important;
  }

  .u-md-after4of5,
  .u-md-after8of10 {
    margin-right: 80% !important;
  }

  .u-md-after5of6,
  .u-md-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-md-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-md-after9of10 {
    margin-right: 90% !important;
  }

  .u-md-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:960px) {

  .u-lg-afterNone {
    margin-right: 0 !important;
  }

  .u-lg-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-lg-after1of10 {
    margin-right: 10% !important;
  }

  .u-lg-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-lg-after1of6,
  .u-lg-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-lg-after1of5,
  .u-lg-after2of10 {
    margin-right: 20% !important;
  }

  .u-lg-after1of4,
  .u-lg-after2of8,
  .u-lg-after3of12 {
    margin-right: 25% !important;
  }

  .u-lg-after3of10 {
    margin-right: 30% !important;
  }

  .u-lg-after1of3,
  .u-lg-after2of6,
  .u-lg-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-lg-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-lg-after2of5,
  .u-lg-after4of10 {
    margin-right: 40% !important;
  }

  .u-lg-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-lg-after1of2,
  .u-lg-after2of4,
  .u-lg-after3of6,
  .u-lg-after4of8,
  .u-lg-after5of10,
  .u-lg-after6of12 {
    margin-right: 50% !important;
  }

  .u-lg-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-lg-after3of5,
  .u-lg-after6of10 {
    margin-right: 60% !important;
  }

  .u-lg-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-lg-after2of3,
  .u-lg-after4of6,
  .u-lg-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-lg-after7of10 {
    margin-right: 70% !important;
  }

  .u-lg-after3of4,
  .u-lg-after6of8,
  .u-lg-after9of12 {
    margin-right: 75% !important;
  }

  .u-lg-after4of5,
  .u-lg-after8of10 {
    margin-right: 80% !important;
  }

  .u-lg-after5of6,
  .u-lg-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-lg-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-lg-after9of10 {
    margin-right: 90% !important;
  }

  .u-lg-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/*
After

SUIT CSS trailing offset utilities.

### Available classes

* `u-afterXofY` (numerous) - Specify the proportional offset after an object.

`X` must be an integer less than `Y`.

`Y` can be any of the following numbers: 2, 3, 4, 5, 6, 8, 10, 12.

#### Plugins

Utilities that can be limited to specific Media Query breakpoints.

* `u-sm-afterXofY` - To use at the smallest Media Query breakpoint.
* `u-md-afterXofY` - To use at the medium Media Query breakpoint.
* `u-lg-afterXofY` - To use at the large Media Query breakpoint.

#### Configuration

There are 3 Media Query breakpoints:

* `--sm-viewport`
* `--md-viewport`
* `--lg-viewport`

When using the [SUIT CSS preprocessor](https://github.com/suitcss/preprocessor),
breakpoints can be configured using `@custom-media`. For example:

```css
@custom-media --sm-viewport (min-width:320px) and (max-width:640px);
@custom-media --md-viewport (min-width:640px) and (max-width:960px);
@custom-media --lg-viewport (min-width:960px);
```

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.After
*/

/**
 * @define utilities
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

.u-alignBaseline {
  vertical-align: baseline !important;
}

.u-alignBottom {
  vertical-align: bottom !important;
}

.u-alignMiddle {
  vertical-align: middle !important;
}

.u-alignTop {
  vertical-align: top !important;
}

/*
Align

SUIT CSS utility classes for vertically aligning elements.

### Available classes

* `u-alignBaseline` -Vertically align to baseline.
* `u-alignBottom` - Vertically align to bottom.
* `u-alignMiddle` - Vertically align to middle.
* `u-alignTop` - Vertically align to top.

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Align
*/

/**
 * @define utilities
 * Specify the proportional offset before an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

.u-before1of12 {
  margin-left: 8.33333% !important;
}

.u-before1of10 {
  margin-left: 10% !important;
}

.u-before1of8 {
  margin-left: 12.5% !important;
}

.u-before1of6,
.u-before2of12 {
  margin-left: 16.66667% !important;
}

.u-before1of5,
.u-before2of10 {
  margin-left: 20% !important;
}

.u-before1of4,
.u-before2of8,
.u-before3of12 {
  margin-left: 25% !important;
}

.u-before3of10 {
  margin-left: 30% !important;
}

.u-before1of3,
.u-before2of6,
.u-before4of12 {
  margin-left: 33.33333% !important;
}

.u-before3of8 {
  margin-left: 37.5% !important;
}

.u-before2of5,
.u-before4of10 {
  margin-left: 40% !important;
}

.u-before5of12 {
  margin-left: 41.66667% !important;
}

.u-before1of2,
.u-before2of4,
.u-before3of6,
.u-before4of8,
.u-before5of10,
.u-before6of12 {
  margin-left: 50% !important;
}

.u-before7of12 {
  margin-left: 58.33333% !important;
}

.u-before3of5,
.u-before6of10 {
  margin-left: 60% !important;
}

.u-before5of8 {
  margin-left: 62.5% !important;
}

.u-before2of3,
.u-before4of6,
.u-before8of12 {
  margin-left: 66.66667% !important;
}

.u-before7of10 {
  margin-left: 70% !important;
}

.u-before3of4,
.u-before6of8,
.u-before9of12 {
  margin-left: 75% !important;
}

.u-before4of5,
.u-before8of10 {
  margin-left: 80% !important;
}

.u-before5of6,
.u-before10of12 {
  margin-left: 83.33333% !important;
}

.u-before7of8 {
  margin-left: 87.5% !important;
}

.u-before9of10 {
  margin-left: 90% !important;
}

.u-before11of12 {
  margin-left: 91.66667% !important;
}

/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:320px) and (max-width:640px) {

  .u-sm-beforeNone {
    margin-left: 0 !important;
  }

  .u-sm-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-sm-before1of10 {
    margin-left: 10% !important;
  }

  .u-sm-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-sm-before1of6,
  .u-sm-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-sm-before1of5,
  .u-sm-before2of10 {
    margin-left: 20% !important;
  }

  .u-sm-before1of4,
  .u-sm-before2of8,
  .u-sm-before3of12 {
    margin-left: 25% !important;
  }

  .u-sm-before3of10 {
    margin-left: 30% !important;
  }

  .u-sm-before1of3,
  .u-sm-before2of6,
  .u-sm-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-sm-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-sm-before2of5,
  .u-sm-before4of10 {
    margin-left: 40% !important;
  }

  .u-sm-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-sm-before1of2,
  .u-sm-before2of4,
  .u-sm-before3of6,
  .u-sm-before4of8,
  .u-sm-before5of10,
  .u-sm-before6of12 {
    margin-left: 50% !important;
  }

  .u-sm-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-sm-before3of5,
  .u-sm-before6of10 {
    margin-left: 60% !important;
  }

  .u-sm-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-sm-before2of3,
  .u-sm-before4of6,
  .u-sm-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-sm-before7of10 {
    margin-left: 70% !important;
  }

  .u-sm-before3of4,
  .u-sm-before6of8,
  .u-sm-before9of12 {
    margin-left: 75% !important;
  }

  .u-sm-before4of5,
  .u-sm-before8of10 {
    margin-left: 80% !important;
  }

  .u-sm-before5of6,
  .u-sm-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-sm-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-sm-before9of10 {
    margin-left: 90% !important;
  }

  .u-sm-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:640px) and (max-width:960px) {

  .u-md-beforeNone {
    margin-left: 0 !important;
  }

  .u-md-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-md-before1of10 {
    margin-left: 10% !important;
  }

  .u-md-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-md-before1of6,
  .u-md-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-md-before1of5,
  .u-md-before2of10 {
    margin-left: 20% !important;
  }

  .u-md-before1of4,
  .u-md-before2of8,
  .u-md-before3of12 {
    margin-left: 25% !important;
  }

  .u-md-before3of10 {
    margin-left: 30% !important;
  }

  .u-md-before1of3,
  .u-md-before2of6,
  .u-md-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-md-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-md-before2of5,
  .u-md-before4of10 {
    margin-left: 40% !important;
  }

  .u-md-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-md-before1of2,
  .u-md-before2of4,
  .u-md-before3of6,
  .u-md-before4of8,
  .u-md-before5of10,
  .u-md-before6of12 {
    margin-left: 50% !important;
  }

  .u-md-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-md-before3of5,
  .u-md-before6of10 {
    margin-left: 60% !important;
  }

  .u-md-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-md-before2of3,
  .u-md-before4of6,
  .u-md-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-md-before7of10 {
    margin-left: 70% !important;
  }

  .u-md-before3of4,
  .u-md-before6of8,
  .u-md-before9of12 {
    margin-left: 75% !important;
  }

  .u-md-before4of5,
  .u-md-before8of10 {
    margin-left: 80% !important;
  }

  .u-md-before5of6,
  .u-md-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-md-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-md-before9of10 {
    margin-left: 90% !important;
  }

  .u-md-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width:960px) {

  .u-lg-beforeNone {
    margin-left: 0 !important;
  }

  .u-lg-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-lg-before1of10 {
    margin-left: 10% !important;
  }

  .u-lg-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-lg-before1of6,
  .u-lg-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-lg-before1of5,
  .u-lg-before2of10 {
    margin-left: 20% !important;
  }

  .u-lg-before1of4,
  .u-lg-before2of8,
  .u-lg-before3of12 {
    margin-left: 25% !important;
  }

  .u-lg-before3of10 {
    margin-left: 30% !important;
  }

  .u-lg-before1of3,
  .u-lg-before2of6,
  .u-lg-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-lg-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-lg-before2of5,
  .u-lg-before4of10 {
    margin-left: 40% !important;
  }

  .u-lg-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-lg-before1of2,
  .u-lg-before2of4,
  .u-lg-before3of6,
  .u-lg-before4of8,
  .u-lg-before5of10,
  .u-lg-before6of12 {
    margin-left: 50% !important;
  }

  .u-lg-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-lg-before3of5,
  .u-lg-before6of10 {
    margin-left: 60% !important;
  }

  .u-lg-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-lg-before2of3,
  .u-lg-before4of6,
  .u-lg-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-lg-before7of10 {
    margin-left: 70% !important;
  }

  .u-lg-before3of4,
  .u-lg-before6of8,
  .u-lg-before9of12 {
    margin-left: 75% !important;
  }

  .u-lg-before4of5,
  .u-lg-before8of10 {
    margin-left: 80% !important;
  }

  .u-lg-before5of6,
  .u-lg-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-lg-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-lg-before9of10 {
    margin-left: 90% !important;
  }

  .u-lg-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/*
Before

SUIT CSS leading offset utilities.

### Available classes

* `u-beforeXofY` (numerous) - Specify the proportional offset before an object.

`X` must be an integer less than `Y`.

`Y` can be any of the following numbers: 2, 3, 4, 5, 6, 8, 10, 12.

#### Plugins

Utilities that can be limited to specific Media Query breakpoints.

* `u-sm-beforeXofY` - To use at the small Media Query breakpoint.
* `u-md-beforeXofY` - To use at the medium Media Query breakpoint.
* `u-lg-beforeXofY` - To use at the large Media Query breakpoint.

#### Configuration

There are 3 Media Query breakpoints:

* `--sm-viewport`
* `--md-viewport`
* `--lg-viewport`

When using the [SUIT CSS preprocessor](https://github.com/suitcss/preprocessor),
breakpoints can be configured using `@custom-media`. For example:

```css
@custom-media --sm-viewport (min-width:320px) and (max-width:640px);
@custom-media --md-viewport (min-width:640px) and (max-width:960px);
@custom-media --lg-viewport (min-width:960px);
```

### Usage

Please refer to the README for [SUIT utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Before
*/

/**
 * @define utilities
 * Color utilities
 */

.u-colorBgAlertCritical { background-color: #78002a; }

.u-colorBgAlertError { background-color: #dc003f; }

.u-colorBgAlertSuccess { background-color: #00c465; }

.u-colorBgAlertWarning { background-color: #fdce00; }

.u-colorBgAlertWarningAlt { background-color: #fd8c00; }

.u-colorBgBlue { background-color: #4178be; }

.u-colorBgBlue10 { background-color: #c0e6ff; }

.u-colorBgBlue20 { background-color: #7cc7ff; }

.u-colorBgBlue30 { background-color: #5aaafa; }

.u-colorBgBlue40 { background-color: #5596e6; }

.u-colorBgBlue50 { background-color: #4178be; }

.u-colorBgBlue60 { background-color: #325c80; }

.u-colorBgBlue70 { background-color: #264a60; }

.u-colorBgBlue80 { background-color: #1d3649; }

.u-colorBgBlue90 { background-color: #152935; }

.u-colorBgBlue100 { background-color: #010205; }

.u-colorBgGreen { background-color: #4b8400; }

.u-colorBgGreen10 { background-color: #c8f08f; }

.u-colorBgGreen20 { background-color: #b4e051; }

.u-colorBgGreen30 { background-color: #8cd211; }

.u-colorBgGreen40 { background-color: #5aa700; }

.u-colorBgGreen50 { background-color: #4b8400; }

.u-colorBgGreen60 { background-color: #2d660a; }

.u-colorBgGreen70 { background-color: #144d14; }

.u-colorBgGreen80 { background-color: #0a3c02; }

.u-colorBgGreen90 { background-color: #0c2808; }

.u-colorBgGreen100 { background-color: #010200; }

.u-colorBgTeal { background-color: #008571; }

.u-colorBgTeal10 { background-color: #a7fae6; }

.u-colorBgTeal20 { background-color: #6eedd8; }

.u-colorBgTeal30 { background-color: #41d6c3; }

.u-colorBgTeal40 { background-color: #00b4a0; }

.u-colorBgTeal50 { background-color: #008571; }

.u-colorBgTeal60 { background-color: #006d5d; }

.u-colorBgTeal70 { background-color: #005448; }

.u-colorBgTeal80 { background-color: #003c32; }

.u-colorBgTeal90 { background-color: #012b22; }

.u-colorBgTeal100 { background-color: #000202; }

.u-colorBgPurple { background-color: #9855d4; }

.u-colorBgPurple10 { background-color: #eed2ff; }

.u-colorBgPurple20 { background-color: #d7aaff; }

.u-colorBgPurple30 { background-color: #ba8ff7; }

.u-colorBgPurple40 { background-color: #af6ee8; }

.u-colorBgPurple50 { background-color: #9855d4; }

.u-colorBgPurple60 { background-color: #734098; }

.u-colorBgPurple70 { background-color: #562f72; }

.u-colorBgPurple80 { background-color: #412356; }

.u-colorBgPurple90 { background-color: #311a41; }

.u-colorBgPurple100 { background-color: #030103; }

.u-colorBgMagenta { background-color: #db2780; }

.u-colorBgMagenta10 { background-color: #ffd2ff; }

.u-colorBgMagenta20 { background-color: #ffb3f1; }

.u-colorBgMagenta30 { background-color: #ff71d4; }

.u-colorBgMagenta40 { background-color: #ff3ca0; }

.u-colorBgMagenta50 { background-color: #db2780; }

.u-colorBgMagenta60 { background-color: #a6266e; }

.u-colorBgMagenta70 { background-color: #7c1c58; }

.u-colorBgMagenta80 { background-color: #601146; }

.u-colorBgMagenta90 { background-color: #3a0b2e; }

.u-colorBgMagenta100 { background-color: #040102; }

.u-colorBgGray { background-color: #777677; }

.u-colorBgGray10 { background-color: #e0e0e0; }

.u-colorBgGray20 { background-color: #c7c7c7; }

.u-colorBgGray30 { background-color: #aeaeae; }

.u-colorBgGray40 { background-color: #959595; }

.u-colorBgGray50 { background-color: #777677; }

.u-colorBgGray60 { background-color: #5a5a5a; }

.u-colorBgGray70 { background-color: #464646; }

.u-colorBgGray80 { background-color: #323232; }

.u-colorBgGray90 { background-color: #121212; }

.u-colorBgGray100 { background-color: #000; }

.u-colorBgWhite { background-color: #fff; }

.u-colorBgWhite1 { background-color: #fdfdfd; }

.u-colorBgWhite2 { background-color: #f9f9f9; }

.u-colorBgWhite3 { background-color: #f4f4f4; }

.u-colorBgWhite4 { background-color: #ececec; }

/*
Color

Weight: 0

Style guide: Utilities.Color
*/

/**
 * @define utilities
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%; /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}

/*
Display

SUIT CSS display utilities.

### Available classes

* `u-block` - Display `block`.
* `u-hidden` - Display `none`.
* `u-hiddenVisually` - Visually hidden but available to screenreaders.
* `u-inline` - Display `inline`.
* `u-inlineBlock` - Display `inline-block`.
* `u-table` - Display `table`.
* `u-tableCell` - Display `table-cell`.
* `u-tableRow` - Display `table-row`.

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Display
*/

/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
      -ms-flex-direction: row !important;
          flex-direction: row !important;
}

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
      -ms-flex-direction: row-reverse !important;
          flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
      -ms-flex-direction: column !important;
          flex-direction: column !important;
}

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
      -ms-flex-direction: column-reverse !important;
          flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
  -ms-flex-wrap: wrap !important;
      flex-wrap: wrap !important;
}

.u-flexNoWrap {
  -ms-flex-wrap: nowrap !important;
      flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
  -ms-flex-wrap: wrap-reverse !important;
      flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
  -webkit-box-pack: start !important;
      -ms-flex-pack: start !important;
          justify-content: flex-start !important;
}

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
      -ms-flex-pack: end !important;
          justify-content: flex-end !important;
}

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
      -ms-flex-pack: center !important;
          justify-content: center !important;
}

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
      -ms-flex-pack: justify !important;
          justify-content: space-between !important;
}

.u-flexJustifyAround {
  -ms-flex-pack: distribute !important;
      justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
      -ms-flex-align: start !important;
          align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
      -ms-flex-align: end !important;
          align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
      -ms-flex-align: center !important;
          align-items: center !important;
}

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
      -ms-flex-align: stretch !important;
          align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
      -ms-flex-align: baseline !important;
          align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
  -ms-flex-line-pack: start !important;
      align-content: flex-start !important;
}

.u-flexAlignContentEnd {
  -ms-flex-line-pack: end !important;
      align-content: flex-end !important;
}

.u-flexAlignContentCenter {
  -ms-flex-line-pack: center !important;
      align-content: center !important;
}

.u-flexAlignContentStretch {
  -ms-flex-line-pack: stretch !important;
      align-content: stretch !important;
}

.u-flexAlignContentBetween {
  -ms-flex-line-pack: justify !important;
      align-content: space-between !important;
}

.u-flexAlignContentAround {
  -ms-flex-line-pack: distribute !important;
      align-content: space-around !important;
}

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */

/* postcss-bem-linter: ignore */

.u-flex > *,
.u-flexInline > * {
  -ms-flex-negative: 1;
      flex-shrink: 1; /* 1 */
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
  -ms-flex-item-align: start !important;
      align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
  -ms-flex-item-align: end !important;
      align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
  -ms-flex-item-align: center !important;
      -ms-grid-row-align: center !important;
      align-self: center !important;
}

.u-flexAlignSelfStretch {
  -ms-flex-item-align: stretch !important;
      -ms-grid-row-align: stretch !important;
      align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
  -ms-flex-item-align: baseline !important;
      align-self: baseline !important;
}

.u-flexAlignSelfAuto {
  -ms-flex-item-align: auto !important;
      -ms-grid-row-align: auto !important;
      align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
      -ms-flex-order: -1 !important;
          order: -1 !important;
}

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
      -ms-flex-order: 1 !important;
          order: 1 !important;
}

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
      -ms-flex-order: 0 !important;
          order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
      -ms-flex: 2 1 0% !important;
          flex: 2 1 0% !important;
}

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
      -ms-flex: 3 1 0% !important;
          flex: 3 1 0% !important;
}

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
      -ms-flex: 4 1 0% !important;
          flex: 4 1 0% !important;
}

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
      -ms-flex: 5 1 0% !important;
          flex: 5 1 0% !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpand {
  margin: auto !important;
}

.u-flexExpandLeft {
  margin-left: auto !important;
}

.u-flexExpandRight {
  margin-right: auto !important;
}

.u-flexExpandTop {
  margin-top: auto !important;
}

.u-flexExpandBottom {
  margin-bottom: auto !important;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width:320px) and (max-width:640px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-sm-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-sm-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-sm-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-sm-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-sm-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-sm-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-sm-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-sm-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-sm-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-sm-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-sm-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-sm-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-sm-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-sm-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-sm-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
            align-items: flex-start !important;
  }

  .u-sm-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
            align-items: flex-end !important;
  }

  .u-sm-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
            align-items: center !important;
  }

  .u-sm-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
            align-items: stretch !important;
  }

  .u-sm-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-sm-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-sm-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-sm-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-sm-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-sm-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-sm-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-sm-flex > *,
  .u-sm-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-sm-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-sm-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-sm-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        -ms-grid-row-align: center !important;
        align-self: center !important;
  }

  .u-sm-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        -ms-grid-row-align: stretch !important;
        align-self: stretch !important;
  }

  .u-sm-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-sm-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        -ms-grid-row-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-sm-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-sm-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-sm-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-sm-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-sm-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-sm-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-sm-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-sm-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-sm-flexExpand {
    margin: auto !important;
  }

  .u-sm-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  .u-sm-flexExpandTop {
    margin-top: auto !important;
  }

  .u-sm-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (medium)
 */

@media (min-width:640px) and (max-width:960px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-md-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-md-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-md-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-md-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-md-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-md-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-md-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-md-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-md-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-md-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-md-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-md-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-md-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-md-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-md-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
            align-items: flex-start !important;
  }

  .u-md-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
            align-items: flex-end !important;
  }

  .u-md-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
            align-items: center !important;
  }

  .u-md-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
            align-items: stretch !important;
  }

  .u-md-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-md-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-md-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-md-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-md-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-md-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-md-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-md-flex > *,
  .u-md-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-md-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-md-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-md-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        -ms-grid-row-align: center !important;
        align-self: center !important;
  }

  .u-md-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        -ms-grid-row-align: stretch !important;
        align-self: stretch !important;
  }

  .u-md-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-md-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        -ms-grid-row-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-md-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-md-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-md-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-md-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-md-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-md-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-md-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-md-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-md-flexExpand {
    margin: auto !important;
  }

  .u-md-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-md-flexExpandRight {
    margin-right: auto !important;
  }

  .u-md-flexExpandTop {
    margin-top: auto !important;
  }

  .u-md-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (large)
 */

@media (min-width:960px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-lg-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-lg-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-lg-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-lg-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-lg-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-lg-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-lg-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-lg-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-lg-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-lg-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-lg-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-lg-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-lg-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-lg-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-lg-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
            align-items: flex-start !important;
  }

  .u-lg-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
            align-items: flex-end !important;
  }

  .u-lg-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
            align-items: center !important;
  }

  .u-lg-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
            align-items: stretch !important;
  }

  .u-lg-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-lg-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-lg-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-lg-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-lg-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-lg-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-lg-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-lg-flex > *,
  .u-lg-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-lg-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-lg-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-lg-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        -ms-grid-row-align: center !important;
        align-self: center !important;
  }

  .u-lg-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        -ms-grid-row-align: stretch !important;
        align-self: stretch !important;
  }

  .u-lg-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-lg-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        -ms-grid-row-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-lg-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-lg-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-lg-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-lg-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-lg-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-lg-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-lg-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-lg-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-lg-flexExpand {
    margin: auto !important;
  }

  .u-lg-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  .u-lg-flexExpandTop {
    margin-top: auto !important;
  }

  .u-lg-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/*
Flex

SUIT CSS flexbox utilities

### Available classes

#### flex-container

* `u-flex` - Create a flex container
* `u-flexInline` - Create an inline flex container

#### flex-direction

* `u-flexRow` - Displays items in a row
* `u-flexRowReverse` - Reverses items in a row
* `u-flexCol` - Display items in a column
* `u-flexColReverse` - Reverses items in a column

#### flex-wrap

* `u-flexWrap` - Wrap items onto another line when space allows
* `u-flexNoWrap` - Force items to stay on one line
* `u-flexWrapReverse` - Wrap items and reverse direction

#### justify-content

* `u-flexJustifyStart` - Align items at the start of the main axis
* `u-flexJustifyEnd` - Align items at the end of the main axis
* `u-flexJustifyCenter` - Align items at the center of the main axis
* `u-flexJustifyBetween` - Items have space between each other on main axis
* `u-flexJustifyAround` - Items have space around each other on main axis

#### align-items

* `u-flexAlignItemsStretch` - Items stretch to fill container
* `u-flexAlignItemsStart` - Cross-start margin edge of the items is placed on
  the cross-start line
* `u-flexAlignItemsEnd` - Cross-end margin edge of the items is placed on the
  cross-end line
* `u-flexAlignItemsCenter` - Items are centered in the cross-axis
* `u-flexAlignItemsBaseline` - Items have their baselines aligned on the cross
  axis

#### align-content

* `u-flexAlignContentStart` - Items are packed to the start of the container
* `u-flexAlignContentEnd` - Items are packed to the end of the container
* `u-flexAlignContentCenter` - Items are packed to the centre of the container
* `u-flexAlignContentStretch` - Lines stretch to take up the remaining space
* `u-flexAlignContentBetween` - Lines evenly distributed; first and last lines
  at container edge
* `u-flexAlignContentAround` - Lines evenly distributed with equal space around
  each line

#### align-self

* `u-flexAlignSelfStart` - Aligns single item at cross axis start
* `u-flexAlignSelfEnd` - Aligns single item at cross axis end
* `u-flexAlignSelfCenter` - Aligns single item at cross axis centre-
* `u-flexAlignSelfStretch` - Stretches single item from cross start to end
* `u-flexAlignSelfAuto` - Uses the default set by `align-items`

#### order

* `u-flexOrderFirst` - Positions an item at the start
* `u-flexOrderLast` - Positions an item at the end
* `u-flexOrderNone` - Sets item order to the default of `0`

#### flex-grow

* `u-flexGrowX` - Specify how much the flex item will grow relatively

`X` can be any of the following numbers: `1`, `2`, `3`, `4`, `5`.

**Aligning with `auto` margins**

* `u-flexExpand` - Expand all margins to fill remaining space
* `u-flexExpandTop` - Expand top margin to fill remaining space
* `u-flexExpandRight` - Expand right margin to fill remaining space
* `u-flexExpandBottom` - Expand bottom margin to fill remaining space
* `u-flexExpandLeft` - Expand left margin to fill remaining space

[Read
more](https://medium.com/@samserif/flexbox-s-best-kept-secret-bd3d892826b6)
about how this works.

#### Plugins

All flex utilities can be limited to specific Media Query breakpoints.

* `u-sm-flexX` - To use at the smallest Media Query breakpoint.
* `u-md-flexX` - To use at the medium Media Query breakpoint.
* `u-lg-flexX` - To use at the largest Media Query breakpoint.

``` html
<div class="u-md-flex u-md-flexWrap">
  <!-- flex items -->
</div>
```

#### Configuration

There are 3 Media Query breakpoints:

* `--sm-viewport`
* `--md-viewport`
* `--lg-viewport`

When using
[postcss-custom-media](https://github.com/postcss/postcss-custom-media),
breakpoints can be configured using `@custom-media`. For example:

```css
@custom-media --sm-viewport (min-width:320px) and (max-width:640px);
@custom-media --md-viewport (min-width:640px) and (max-width:960px);
@custom-media --lg-viewport (min-width:960px);
```

### Usage

#### Centring an element in its container

``` html
<div class="u-flex u-flexAlignItemsCenter u-flexJustifyCenter">
  <p>Some centred content</p>
</div>
```

#### Usage with [`Grid`](https://github.com/suitcss/components-grid)

Note: The `Grid` component already sets `display: flex` on the root element.

``` html
<div class="Grid Grid--alignBottom">
  <div class="Grid-cell u-size1of3 u-md-flexAlignSelfCenter">Content</div>
  <div class="Grid-cell u-size1of3">Content</div>
  <div class="Grid-cell u-size1of3">Content</div>
</div>
```

#### Usage with [`utils-size`](https://github.com/suitcss/utils-size)

``` html
<div class="u-flex u-flexJustifyEnd">
  <div class="u-size4of12">Content</div>
  <div class="u-size2of12">Content</div>
  <div>Content</div>
</div>
```

``` html
<div class="u-flex u-flexAlignItemsCenter">
  <div class="u-size1of4">Content</div>
  <div class="u-size1of4">Content</div>
  <div class="u-sizeFill">Content</div>
</div>
```

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Flex
*/

/**
 * @define utilities
 * Font utilities
 */

.u-fontSizeXXL { font-size: 56px; }

.u-fontSizeXL { font-size: 32px; }

.u-fontSizeL { font-size: 24px; }

.u-fontSizeXM { font-size: 20px; }

.u-fontSizeM { font-size: 16px; }

.u-fontSizeS { font-size: 13px; }

.u-fontSizeXS { font-size: 10px; }

.u-fontWeightBold { font-weight: 600; }

.u-fontWeightMedium { font-weight: 500; }

.u-fontWeightRegular { font-weight: 400; }

.u-fontWeightLight { font-weight: 300; }

.u-fontWeightThin { font-weight: 200; }

.u-fontWeightUltraLight { font-weight: 100; }

.u-fontStyleItalic { font-style: italic; }

/*
Font

Weight: 0

Style guide: Utilities.Font
*/

/**
 * @define utilities
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf::before,
.u-cf::after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.u-cf::after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}

/*
Layout

A SUIT CSS collection of utility classes for low-level CSS layout traits.

### Available classes

* `u-cf` - Contain floats (micro clearfix).
* `u-nbfc` - Create a new block formatting context.
* `u-nbfcAlt` - Create a new block formatting context (alternative technique).
* `u-floatLeft` - Float left.
* `u-floatRight` - Float right.

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Layout
*/

/**
 * @define utilities
 * Clean link
 *
 * A link without any text-decoration at all.
 */

.u-linkClean,
.u-linkClean:hover,
.u-linkClean:focus,
.u-linkClean:active {
  text-decoration: none !important;
}

/**
 * Link complex
 *
 * A common pattern is to have a link with several pieces of text and/or an
 * icon, where only one piece of text should display the underline when the
 * link is the subject of user interaction.
 *
 * Example HTML:
 *
 * <a class="u-linkComplex" href="#">
 *   Link complex
 *   <span class="u-linkComplexTarget">target</span>
 * </a>
 */

.u-linkComplex,
.u-linkComplex:hover,
.u-linkComplex:focus,
.u-linkComplex:active {
  text-decoration: none !important;
}

.u-linkComplex:hover .u-linkComplexTarget,
.u-linkComplex:focus .u-linkComplexTarget,
.u-linkComplex:active .u-linkComplexTarget {
  text-decoration: underline !important;
}

/**
 * Block-level link
 *
 * Combination of traits commonly used in vertical navigation lists.
 */

.u-linkBlock,
.u-linkBlock:hover,
.u-linkBlock:focus,
.u-linkBlock:active {
  display: block !important;
  text-decoration: none !important;
}

/*
Link

SUIT CSS link utilities.

### Available classes

* `u-linkBlock` - Block-level link with no `text-decoration` for any state.

* `u-linkClean` - A link without no `text-decoration` for any state.

* `u-linkComplex` - Limit a link's interactive `text-decoration` underline to a
  sub-section of the link text.

```html
<a class="u-linkComplex" href="{url}">
  Link complex
  <span class="u-linkComplexTarget">target</span>
</a>
```

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Link
*/

/** @define utilities */

.u-posFit,
.u-posAbsoluteCenter,
.u-posAbsolute {
  position: absolute !important;
}

/**
 * Element will be centered to its nearest relatively-positioned
 * ancestor.
 */

.u-posFixedCenter,
.u-posAbsoluteCenter {
  left: 50% !important;
  top: 50% !important;
  -webkit-transform: translate(-50%, -50%) !important;
          transform: translate(-50%, -50%) !important;
}

.u-posFit,
.u-posFullScreen {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFullScreen,
.u-posFixedCenter,
.u-posFixed {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; /* 1 */
  position: fixed !important;
}

.u-posRelative {
  position: relative !important;
}

.u-posStatic {
  position: static !important;
}

/*
Position

SUIT CSS utility classes for positioning.

### Available classes

* `u-posAbsolute` - Absolutely position an element.
* `u-posAbsoluteCenter` - Absolutely position and centre an element.
* `u-posFit` - Fit an element to the dimensions of its parent
* `u-posFullScreen` - Fixes an element over the viewport
* `u-posFixed` - Fixed position an element.
* `u-posFixedCenter` - Fix an element in the centre of the viewport
* `u-posRelative` - Relatively position an element.
* `u-posStatic` - Static position an element.

### Usage

#### Creating a dialog overlay

``` html
<div role="dialog" class="Dialog u-posFixedCenter">
  <img src="{src}" alt="" />
</div>
<div class="Cover u-posFullScreen"></div>
```

[Demo](http://codepen.io/simonsmith/pen/qbGaPK)

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Position
*/

/**
 * @define utilities
 * Sizing utilities
 */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

.u-size1of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 8.33333% !important;
}

.u-size1of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 10% !important;
}

.u-size1of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 25% !important;
}

.u-size3of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 33.33333% !important;
}

.u-size3of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 40% !important;
}

.u-size5of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 50% !important;
}

.u-size7of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 60% !important;
}

.u-size5of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 66.66667% !important;
}

.u-size7of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 83.33333% !important;
}

.u-size7of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 87.5% !important;
}

.u-size9of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 90% !important;
}

.u-size11of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
}

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */

.u-sizeFill {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
  -ms-flex-preferred-size: 0% !important;
      flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 auto !important;
          flex: 1 1 auto !important;
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  width: 100% !important;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width:320px) and (max-width:640px) {

  /* Proportional widths: breakpoint 1 (small)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-sm-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-sm-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-sm-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-sm-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-sm-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-sm-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-sm-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-sm-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-sm-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-sm-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-sm-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-sm-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-sm-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

@media (min-width:640px) and (max-width:960px) {

  /* Proportional widths: breakpoint 2 (medium)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */

  .u-md-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-md-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-md-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-md-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-md-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-md-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-md-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-md-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-md-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-md-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-md-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-md-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-md-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */

@media (min-width:960px) {

  /* Proportional widths: breakpoint 3 (large)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-lg-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-lg-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-lg-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-lg-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-lg-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-lg-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-lg-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-lg-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-lg-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-lg-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-lg-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-lg-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-lg-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    width: 100% !important;
  }

}

/*
Size

SUIT CSS sizing utilities. Sets `width` and `flex-basis`.

### Available classes

* `u-sizeFit` - Make an element shrink wrap its content with `flex-basis`.
* `u-sizeFull` - Make an element the width of its parent.
* `u-sizeFill` - Make an element fill the remaining space. Distribute space
  evenly on multiple elements.
* `u-sizeFillAlt` - An alternative method to make an element fill the remaining
  space. Distribute space based on element width.
* `u-sizeXofY` (numerous) - Specify the proportional width of an object.

`X` must be an integer less than `Y`.

`Y` can be any of the following numbers: 2, 3, 4, 5, 6, 8, 10, 12.

#### Plugins

Utilities that can be limited to specific Media Query breakpoints.

* `u-sm-sizeXofY` - To use at the smallest Media Query breakpoint.
* `u-md-sizeXofY` - To use at the medium Media Query breakpoint.
* `u-lg-sizeXofY` - To use at the largest Media Query breakpoint.

#### Configuration

There are 3 Media Query breakpoints:

* `--sm-viewport`
* `--md-viewport`
* `--lg-viewport`

When using
[postcss-custom-media](https://github.com/postcss/postcss-custom-media),
breakpoints can be configured using `@custom-media`. For example:

```css
@custom-media --sm-viewport (min-width:320px) and (max-width:640px);
@custom-media --md-viewport (min-width:640px) and (max-width:960px);
@custom-media --lg-viewport (min-width:960px);
```

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Size
*/

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */

.u-textKern {
  -webkit-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1; /* 1 */
  -webkit-font-kerning: normal;
          font-kerning: normal; /* 2 */
  text-rendering: optimizeLegibility; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}

/*
Text

SUIT CSS text utilities.

### Available classes

* `u-textBreak` - Break strings when their length exceeds the width of their
  container.
* `u-textCenter` - Center-align text.
* `u-textLeft` - Left-align text.
* `u-textRight` - Right-align text.
* `u-textInheritColor` - Inherit the ancestor's text color.
* `u-textKern` - Enable kerning in supporting browsers.
* `u-textNoWrap` - Prevent wrapping at whitespace.
* `u-textTruncate` - Truncate a single line of text, with ellipsis.

### Usage

Please refer to the README for [SUIT CSS
utils](https://github.com/suitcss/utils/)

Weight: 0

Style guide: Utilities.Text
*/

/**
 * Components
 */

/** @define Avatar */

.Avatar {
  font-size: 1em;
}

/*
Avatar

Markup: theme-components-avatar.html

Weight: 0

Style guide: Components.Avatar
*/

/** @define Button */

/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */

.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 0;
  box-sizing: border-box; /* 1 */
  color: #000; /* 2 */
  cursor: pointer;
  display: inline-block;
  font: 500 15px / 15px "Helvetica Neue for IBM", "Helvetica Neue", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", sans-serif; /* 3 */
  margin: 0;
  padding: 10px 20px;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 4 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.2;
}

/*
Button

Button description.

When using a `<button>` element, **always specify a `type`**. When using a
`<a>` element, **always add `role="button"` for accessibility**.

Disable `<button>` elements with the boolean `disabled` attribute and `<a>`
elements with the `is-disabled` class.

Compatibility untested.

.Button--primary     - Primary button description
.Button--danger      - Danger button description
.Button--transparent - Transparent button description

Markup: theme-components-button.html

Weight: 0

Style guide: Components.Button
*/

.Button {
  background-color: #e0e0e0;
  border-radius: 20px;
  cursor: default;
  -webkit-font-smoothing: antialiased;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  white-space: nowrap;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus {
  background-color: #c7c7c7;
  color: #000;
}

.Button:active {
  background-color: #aeaeae;
  color: #000;
}

.Button:disabled,
.Button.is-disabled {
  pointer-events: none;
}

/**
 * Modifier: primary buttons
 */

.Button--primary {
  background-color: #5aa700;
  color: #fff;
}

/**
 * UI states
 */

.Button--primary:hover,
.Button--primary:focus {
  background-color: #4b8400;
  color: #fff;
}

.Button--primary:active {
  background-color: #2d660a;
  color: #fff;
}

/**
 * Modifier: danger buttons
 */

.Button--danger {
  background-color: #78002a;
  color: #fff;
}

/**
 * UI states
 */

.Button--danger:hover,
.Button--danger:focus {
  background-color: #78002a;
  color: #fff;
}

.Button--danger:active {
  background-color: #78002a;
  color: #fff;
}

/**
 * Modifier: transparent buttons
 */

.Button--transparent {
  background-color: transparent;
  color: #4b8400;
}

/**
 * UI states
 */

.Button--transparent:hover,
.Button--transparent:focus {
  background-color: #5aa700;
  color: #fff;
}

.Button--transparent:active {
  background-color: #4b8400;
  color: #fff;
}

/** @define DataTable */

/**
 * Best applied to table elements.
 */

.DataTable {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
}

.DataTable-tableData,
.DataTable-tableHeader {
  border-bottom-color: currentcolor;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  font: inherit;
  padding: 0.4em 0.75em;
  text-align: left;
}

/*
DataTable

DataTable description.

Compatibility untested.

Markup: theme-components-data-table.html

Weight: 0

Style guide: Components.DataTable
*/

/** @define FlexEmbed */

/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative;
}

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */

.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%;
}

/**
 * Modifier: 3:1 aspect ratio
 */

.FlexEmbed-ratio--3by1 {
  padding-bottom: 33.33333%;
}

/**
 * Modifier: 2:1 aspect ratio
 */

.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%;
}

/**
 * Modifier: 16:9 aspect ratio
 */

.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%;
}

/**
 * Modifier: 4:3 aspect ratio
 */

.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%;
}

/**
 * Fit the content to the aspect ratio
 */

.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/*
FlexEmbed

CSS for responsive, intrinsic ratio embeds. Includes modifier classes for 3:1,
2:1, 16:9, and 4:3 aspect ratios.

### Available classes

* `FlexEmbed` - The root node.
* `FlexEmbed-ratio` - The element that provides the aspect ratio (1:1 by
  default).
* `FlexEmbed-ratio--3by1` - The modifier class for 3:1 aspect ratio embed.
* `FlexEmbed-ratio--2by1` - The modifier class for 2:1 aspect ratio embed,
* `FlexEmbed-ratio--16by9` - The modifier class for 16:9 aspect ratio embed.
* `FlexEmbed-ratio--4by3` - The modifier class for 4:3 aspect ratio embed.
* `FlexEmbed-content` - The descendent class for the content that is being
  displayed.

### Usage

Example:

```html
<div class="FlexEmbed">
  <div class="FlexEmbed-ratio FlexEmbed-ratio--16by9"></div>
  <div class="FlexEmbed-content">
    <!-- child content -->
  </div>
</div>
```

You can add custom own aspect ratios. For example, to create a 2.35:1 aspect
ratio:

```css
\**
 * Modifier: 47:20 aspect ratio
 *\

.FlexEmbed-ratio--47by20 {
  padding-bottom: 42.55%;
}
```

Alternatively, aspect ratios can be calculated programmatically and the
corresponding `padding-bottom` value applied using an inline style.

```html
<div class="FlexEmbed">
  <div class="FlexEmbed-ratio" style="padding-bottom:{{percentage}}%"></div>
  <div class="FlexEmbed-content">
    <!-- child content -->
  </div>
</div>
```

Weight: 0

Style guide: Components.FlexEmbed
*/

/** @define Form */

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications. Removes the default spacing and border for
 * appropriate elements.
 */

.Form {}

.Form label,
.Form input,
.Form textarea,
.Form select {
  display: inline-block;
  vertical-align: middle;
}

.Form--inline .Form-item {
  display: inline-block;
  margin-right: 0 5px 0 0;
}

.Form-item {
  margin: 0 0 1em;
}

.Form-item--stacked .Form-label {
  display: block;
}

/*
Form

.Form--inline       - Arranges form elements horizontally

Markup: theme-components-form.html

Weight: 0

Style guide: Components.Form
*/

/** @define Grid */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; /* 1 */
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */

.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/**
 * Modifier: gutters
 */

.Grid--withGutter {
  margin: 0 -10px;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */

.Grid-cell {
  box-sizing: inherit;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  margin: 0 auto;
}

/*
Grid

A CSS grid component. The grid makes use of `flexbox` and `box-sizing` to
provide features that float-based layouts cannot.

N.B. This component relies on particular dimensions being applied to cells in
the grid via other classes. For example,
[suitcss-utils-size](https://github.com/suitcss/utils-size/).

### Features

* Fluid layout.
* Intelligent cell wrapping.
* Evenly fit cell spacing
* Equal height columns
* Horizontal centering of cells.
* Custom vertical alignment of cells (top, bottom, or middle).
* Cell width is controlled independently of grid gutter.
* Infinite nesting.

### Available classes

* `Grid`: core component
* `Grid--alignCenter`: center-align all child `Grid-cell`
* `Grid--alignRight`: right-align all child `Grid-cell`
* `Grid--alignMiddle`: middle-align all child `Grid-cell`
* `Grid--alignBottom`: bottom-align all child `Grid-cell`
* `Grid--fit`: evenly distribute space amongst all child `Grid-cell`
* `Grid--equalHeight`: all child `Grid-cell` match height of the tallest
* `Grid--withGutter`: adds a gutter between cells
* `Grid-cell`: a child cell of `Grid` that wraps grid content
* `Grid-cell--center`: center an individual `Grid-cell`

### Configurable variables

* `--Grid-gutter-size`: the width of the gutter applied by the
  `Grid--withGutter` modifier class.

### Use

A simple grid is easy to create. A grid container can have any number of child
cells. When used with `Grid--fit` space is evenly distributed without need for
sizing utilities.

```html
<div class="Grid Grid--fit Grid--withGutter">
  <div class="Grid-cell"></div>
  <div class="Grid-cell"></div>
  <div class="Grid-cell"></div>
  <div class="Grid-cell"></div>
</div>
```

For more granular control over layout make use of modifiers and sizing
utilities.

```html
<div class="Grid [Grid--alignCenter|Grid--alignRight|Grid--alignMiddle|etc.]">
  <div class="Grid-cell u-size1of2 u-lg-size6of12"></div>
  <div class="Grid-cell u-size1of2 u-lg-size4of12"></div>
  <div class="Grid-cell u-size1of3 u-lg-size2of12"></div>
  <div class="Grid-cell u-size1of3"></div>
</div>
```

Fit cells to their content and allow others to fill the remaining space.

```html
<div class="Grid">
  <div class="Grid-cell u-sizeFit">Fit to content</div>
  <div class="Grid-cell u-sizeFill">Take up remaining space</div>
</div>
```

#### Widths and offsets

Cell widths and offsets can be controlled using the [responsive sizing
utilities](https://github.com/suitcss/utils-size) and [responsive offset
utilities](https://github.com/suitcss/utils-offset), respectively.

One limitation of creating grid gutters in the manner shown above is that it
prevents any offset utilities applied directly to the `Grid` component from
functioning as expected.

GOOD:

```html
<div class="Grid Grid--withGutter">
  <div class="Grid-cell u-size1of2 u-before1of4 u-after1of4">
    {{>partial}}
  </div>
</div>
```

BAD:

```html
<div class="Grid Grid--withGutter u-before1of4 u-after1of4">
  <div class="Grid-cell">
    {{>partial}}
  </div>
</div>
```

You can nest grids in any context, including one that uses dimension or offset
utilities, but keep in mind that the dimensions will be relative to the
grid's width, and not the width of the whole application.

```html
<div class="u-before1of4 u-after1of4">
  <div class="Grid Grid--withGutter">
    <div class="Grid-cell u-size1of2"> <!-- 50% of the width of the Grid -->
      {{>partial}}
    </div>
  </div>
</div>
```

Weight: 0

Style guide: Components.Grid
*/

/** @define TabBar */

.TabBar {
  font-size: 1em;
}

/*
TabBar

Markup: theme-components-tab-bar.html

Weight: 0

Style guide: Components.TabBar
*/

/** @define TextField */

/**
 * The text field classes are best applied to inputs and textares.
 */

/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 */

.TextField {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 2px;
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  cursor: text;
  display: inline-block;
  font: 500 16px / 16px "Helvetica Neue for IBM", "Helvetica Neue", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", sans-serif; /* 3 */
  margin: 0;
  padding: 8px 16px;
  position: relative;
  vertical-align: middle;
}

/**
 * Browser-specific selectors for styling placeholder text.
 */

.TextField::-webkit-input-placeholder {
  color: inherit; /* 2 */
  opacity: 0.3;
}

.TextField::-moz-placeholder {
  color: inherit; /* 2 */
  opacity: 0.3;
}

.TextField:-ms-input-placeholder {
  color: inherit; /* 2 */
  opacity: 0.3;
}

.TextField::placeholder {
  color: inherit; /* 2 */
  opacity: 0.3;
}

/**
 * UI states
 */

.TextField:disabled {
  cursor: default;
  opacity: 0.2;
}

/*
TextField

TextField description.

Compatibility untested.

Markup: theme-components-text-field.html

Weight: 0

Style guide: Components.TextField
*/

/**
 * Theme
 */

/**
 * Theme definition
 *
 * This defines the theme in fundamental terms, but not how it is applied to
 * the components. That is done in `theme-map.css`.
 */

/**
 * Breakpoints
 */

/**
 * Interaction
 */

/**
 * Spacing
 */

/**
 * Colors
 */

/**
 * Fonts
*/

/**
 * Defaults
 */

/**
 * 1. https://github.ibm.com/Design/fonts#faq
 */

:root { /* 1 */
}

